#!/bin/sh

FILE=
USER_COLOR=
PATTERN=

RED="\033[1;31m"
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
END="\033[m"

tput colors >/dev/null;
if [ "$?" != "0" ]; then
	echo "Your terminal probably doesn't support colors." > /dev/stderr

	echo "Continue? [no = n|yes = any other key] "
	read TMP
	if [ "$TMP" = "n" -o "$TMP" = "no" ]; then
		exit -1;
	fi
fi

# set input file
if [ -z "$1" ]; then
	FILE=/dev/stdin
else
	if [ -f "$1" ]; then
		FILE="$1"
	elif [ -f "test/$1.log" ]; then
		FILE="test/$1.log"
	elif [ -f "test/$1" ]; then # this is after .log because of binaries
		FILE="test/$1"
	elif [ -f "test/$1-test.log" ]; then
		FILE="test/$1-test.log"
	else
		echo "Couldn't find file $1" > /dev/stderr
		exit -1
	fi
fi

# set pattern and color
if [ -n "$2" ]; then
	PATTERN="$2"

	if [ -n "$3" ]; then
		USER_COLOR="$3"
	else
		USER_COLOR="$YELLOW"
	fi
fi

cat "$FILE" | while read LINE; do
	# USER'S PATTERN
	if [ -n "$PATTERN" ]; then
		if echo "$LINE" | grep -q -i "$PATTERN"; then
			echo -e "${USER_COLOR}${LINE}${END}"
			continue
		fi
	fi

	# ERRORS
	if echo "$LINE" | grep -q -i error; then
		echo -e "${RED}${LINE}${END}"

	# DEBUG MESSAEGES
	elif echo "$LINE" | grep -q -E '\[[0-9]+\s+\|.*\]' ; then
		echo -e "${GREEN}${LINE}${END}"

	# NORMAL PRINTING
	else
		echo "${LINE}"
	fi
done
